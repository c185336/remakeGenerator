% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui.R
\name{workflow}
\alias{workflow}
\title{Function \code{workflow}}
\usage{
workflow(targets = NULL, make_these = "all", sources = NULL,
  packages = NULL, remakefile = "remake.yml", makefile = NULL,
  prepend = NULL, begin = NULL, clean = NULL, remake_args = list(verbose
  = TRUE), run = TRUE, command = "make")
}
\arguments{
\item{targets}{YAML-like list of targets, which you can generate by supplying
data frames of remake commands to the \code{\link{targets}} function.}

\item{make_these}{names of the remake targets to makle}

\item{sources}{Character vector of R source files or their containing folders.}

\item{packages}{Character vector of packages}

\item{remakefile}{Character, name of the \code{remake} file to generate. 
Should be in the current working directory.}

\item{makefile}{Deprecated. The name of the Makefile will always be 'Makefile'.}

\item{prepend}{Character vector of lines to prepend to the Makefile}

\item{begin}{Use "prepend" instead.}

\item{clean}{Deprecated. The Makefile is no longer stand alone, so it does not need 'clean'.
Use \code{remake::make("clean")}.}

\item{remake_args}{Fully-named list of additional arguments to \code{remake::make}.
You cannot set \code{target_names} or \code{remake_file} this way because those
names are reserved.}

\item{run}{logical, whether to actually run the Makefile or just write it.}

\item{command}{character scalar, command to run to execute the Makefile.}
}
\description{
Write and execute a Makefile to run a remake workflow.
Use the \code{\link{help_remakeGenerator}} function to get more help.
}
\details{
Use the \code{\link{help_remakeGenerator}} function to get more help.
}
\seealso{
\code{\link{help_remakeGenerator}}
}

